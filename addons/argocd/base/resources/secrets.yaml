apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argocd-secret
  namespace: argocd
spec:
  refreshInterval: "1m"
  secretStoreRef:
    name: addons-vault-backend
    kind: ClusterSecretStore
  target:
    name: argocd-secret
    template:
      metadata:
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: ExternalSecret
          app.kubernetes.io/name: argocd-secret
          app.kubernetes.io/part-of: argocd
          helm.sh/chart: argo-cd-5.28.1
      data:
        admin.password: "{{ .adminPassword }}"
        admin.passwordMtime: "{{ .adminPasswordMTime }}"
        server.secretkey: "{{ .serverSecretKey }}"
        oidc.auth0.clientID: "{{ .auth0ClientID }}"
        oidc.auth0.clientSecret: "{{ .auth0ClientSecret }}"
  data:
    - secretKey: adminPassword
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: argocd-secret
        property: adminPassword
    - secretKey: serverSecretKey
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: argocd-secret
        property: serverSecretKey
    - secretKey: adminPasswordMTime
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: argocd-secret
        property: adminPasswordMTime
    - secretKey: auth0ClientID
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: argocd-secret
        property: auth0ClientID
    - secretKey: auth0ClientSecret
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: argocd-secret
        property: auth0ClientSecret
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cluster-kubernetes.default.svc
  namespace: argocd
spec:
  refreshInterval: "1m"
  secretStoreRef:
    name: addons-vault-backend
    kind: ClusterSecretStore
  target:
    name: cluster-kubernetes.default.svc
    template:
      metadata:
        labels:
          argocd.argoproj.io/secret-type: cluster
          app.kubernetes.io/managed-by: ExternalSecret
          app.kubernetes.io/instance: argocd
      data:
        config: '{"tlsClientConfig":{"insecure":false}}'
        name: "{{ .envName }}"
        server: "https://kubernetes.default.svc"
  data:
    - secretKey: envName
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: argocd-addons-repo-creds
        property: envName
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argocd-addons-repo
  namespace: argocd
spec:
  refreshInterval: "1m"
  secretStoreRef:
    name: addons-vault-backend
    kind: ClusterSecretStore
  target:
    name: argocd-addons-repo
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: argocd
          argocd.argoproj.io/secret-type: repository
          app.kubernetes.io/managed-by: ExternalSecret
      data:
        sshPrivateKey: "{{ .sshPrivateKey }}"
        url: "{{ .url }}"
        type: git
  data:
    - secretKey: sshPrivateKey
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: argocd-addons-repo-creds
        property: sshPrivateKey
    - secretKey: url
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: argocd-addons-repo-creds
        property: url
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argocd-notifications-secret
  namespace: argocd
spec:
  refreshInterval: "1m"
  secretStoreRef:
    name: addons-vault-backend
    kind: ClusterSecretStore
  target:
    name: argocd-notifications-secret
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: argocd
          app.kubernetes.io/managed-by: ExternalSecret
      data:
        slack-token: "{{ .slackToken }}"
  data:
    - secretKey: slackToken
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: argocd-slack-token
        property: slackToken

