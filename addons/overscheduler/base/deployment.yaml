apiVersion: apps/v1
kind: Deployment
metadata:
  name: overscheduler
  labels:
    app.kubernetes.io/component: overscheduler
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/instance: overscheduler
    app.kubernetes.io/name: overscheduler
    app.kubernetes.io/version: v0.0.1
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: overscheduler
      app.kubernetes.io/name: overscheduler
  template:
    metadata:
      labels:
        app.kubernetes.io/component: overscheduler
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/instance: overscheduler
        app.kubernetes.io/name: overscheduler
        app.kubernetes.io/version: v0.0.1
    spec:
      containers:
        - name: pause
          image: k8s.gcr.io/pause
          resources:
            limits:
              memory: 64Mi
            requests:
              cpu: 32m
              memory: 64Mi
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
      priorityClassName: over-provisioning
      restartPolicy: Always
      terminationGracePeriodSeconds: 15
      dnsPolicy: ClusterFirst
      nodeSelector:
        deploy-group/addons: 'true'
      automountServiceAccountToken: false
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: overscheduler
              app.kubernetes.io/name: overscheduler
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: overscheduler
              app.kubernetes.io/name: overscheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
      maxSurge: 0%
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 1
